// Generated by SwiftyBridges. DO NOT MODIFY!

import Foundation
import SwiftyBridgesClient

{% for apiType in apiDeclarations %}
{{ apiType.leadingTrivia }}
class {{ apiType.name }}: SwiftyBridgesClient.API {
    {% for method in apiType.publicMethods %}

    {{ method.leadingTrivia }}
    func {{ method.name }}{{ method.clientMethodSignature }} {
        let call = {{ method.generatedTypeName }}({% for parameter in method.parameters %}
            parameter{{ forloop.counter0 }}: {{ parameter.variableName }}{% if not forloop.last %},{% endif %}{% endfor %}
        )
        {% if method.returnsVoid %}_ ={% else %}return{% endif %} try await perform(call)
    }
    {% endfor %}
}

{% endfor %}
{% for apiType in apiDeclarations %}
extension {{ apiType.name }} {
    {% for method in apiType.publicMethods %}
    private struct {{ method.generatedTypeName }}: APIMethodCall {
        typealias ReturnType = {{ method.returnType.codableEffectiveReturnTypeName }}

        static let typeName = "{{ apiType.name }}"
        static let methodID = "{{ method.methodID }}"

        {% for parameter in method.parameters %}
        var parameter{{ forloop.counter0 }}: {{ parameter.typeName }}
        {% endfor %}
        {% include "Templates/CallTypeCodingKeys.swift.stencil" %}
    }

    {% endfor %}
}

{% endfor %}